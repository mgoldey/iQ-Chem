#!/usr/bin/python
import os, sys, csv, math
usage = "usage: %s infile m1 m2 lb ub inc [outfile]" %         os.path.basename(sys.argv[0])
print usage

inp_string = sys.argv[1]
dimerReader=csv.reader(open(inp_string+'.txt', 'rb'), delimiter='\t')
com1=[0.0,0.0,0.0]
com2=[0.0,0.0,0.0]
m1sum=0
m2sum=0
m1=int(sys.argv[2])
m2=int(sys.argv[3])
m1x=[]
m1y=[]
m1z=[]
m2x=[]
m2y=[]
m2z=[]
vector=[]
d=0.00
comvx=[]
comvy=[]
comvz=[]
atoms1=[]
atoms2=[]
for i, row in enumerate(dimerReader):
    print row
    if i<m1:
        m1x.append(float(row[1]))
        m1y.append(float(row[2]))
        m1z.append(float(row[3]))
        atoms1.append(row[0])
        if row[0]=='O':
                atsz=16
        if row[0]=='H':
                atsz=1
        if row[0]=='N':
                atsz=14
        if row[0]=='C':
                atsz=12
        if row[0]=='He':
                atsz=4
        if row[0]=='Ne':
                atsz=20
        if row[0]=='Ar':
                atsz=40
        com1[0]+=float(row[1])*atsz
        com1[1]+=float(row[2])*atsz
        com1[2]+=float(row[3])*atsz
        m1sum+=atsz
    else:
        m2x.append(float(row[1]))
        m2y.append(float(row[2]))
        m2z.append(float(row[3]))
        atoms2.append(row[0])
        if row[0]=='O':
                atsz=16
        if row[0]=='H':
                atsz=1
        if row[0]=='N':
                atsz=14
        if row[0]=='C':
                atsz=12
        if row[0]=='He':
                atsz=4
        if row[0]=='Ne':
                atsz=20
        if row[0]=='Ar':
                atsz=40

        com2[0]+=float(row[1])*atsz
        com2[1]+=float(row[2])*atsz
        com2[2]+=float(row[3])*atsz
        m2sum+=atsz

for i, foo in enumerate(com1):
    com1[i]/=m1sum
    com2[i]/=m2sum
    vector.append( com2[i]-com1[i] )
    d+=vector[i]*vector[i]

#for i, row in enumerate(m1x):
#   comvx.append( m1x[i]-com1[0])
#   comvy.append( m1y[i]-com1[1])
#   comvz.append( m1z[i]-com1[2])
for i, row in enumerate(m2x):
    comvx.append( m2x[i]-com2[0])
    comvy.append( m2y[i]-com2[1])
    comvz.append( m2z[i]-com2[2])

d=math.sqrt(d)

#print com1
#print com2
#print d

newmx=[]
newmy=[]
newmz=[]

dnew=0.2

#for i, row in enumerate(m2x):
#    newmx.append(com1[0]+comvx[i]+vector[0]*(d+dnew)/d)
#    newmy.append(com1[1]+comvy[i]+vector[1]*(d+dnew)/d)
#    newmz.append(com1[2]+comvz[i]+vector[2]*(d+dnew)/d)
#
#for i, row in enumerate(newmx):
#    print newmx[i], '\t', newmy[i], '\t', newmz[i]


inc = float(sys.argv[6])
lower_bound = float(sys.argv[4])
upper_bound = float(sys.argv[5])+inc
output = sys.stdout
#print "There are %s args " %len(sys.argv)
scriptout = open(inp_string+'_run.sh', 'w')
rem =open('rem','r')
L = []
while 1:
    next = lower_bound + len(L) * inc
    if inc > 0 and next >= upper_bound:
        break
    elif inc < 0 and next <= upper_bound:
            break
    L.append(next)

print "running list: ", L

for num in L:
	output = open(inp_string+'_'+str(num)+'.in', 'w')
	newmx=[]
	newmy=[]
	newmz=[]
	for i, row in enumerate(m2x):
		newmx.append(com1[0]+comvx[i]+vector[0]*(d+num)/d)
		newmy.append(com1[1]+comvy[i]+vector[1]*(d+num)/d)
		newmz.append(com1[2]+comvz[i]+vector[2]*(d+num)/d)

	output.write("$molecule\n0 1\n")
	for i, row in enumerate(m1x):
		output.write('@'+atoms1[i]+'\t'+str(m1x[i])+'\t'+str(m1y[i])+'\t'+str(m1z[i])+'\n')

	for i, row in enumerate(m1x):
		output.write(str(atoms2[i]+'\t'+str(newmx[i])+'\t'+str(newmy[i])+'\t'+ str(newmz[i])+'\n'))
	output.write("$end\n")
	rem.seek(0)
	for s in rem:
		output.write(s.replace('foo',str(num)))	

	output.write("\n@@@\n")
	output.write("$molecule\n0 1\n")
	for i, row in enumerate(m1x):
	    output.write(atoms1[i]+'\t'+str(m1x[i])+'\t'+str(m1y[i])+'\t'+str(m1z[i])+'\n')

	for i, row in enumerate(m1x):
	    output.write('@'+str(atoms2[i]+'\t'+str(newmx[i])+'\t'+str(newmy[i])+'\t'+ str(newmz[i])+'\n'))
	output.write("$end\n")
	rem.seek(0)
	for s in rem:
	    output.write(s.replace('foo',str(num)))

	output.write("\n@@@\n")

	output.write("$molecule\n0 1\n")
	for i, row in enumerate(m1x):
	    output.write(atoms1[i]+'\t'+str(m1x[i])+'\t'+str(m1y[i])+'\t'+str(m1z[i])+'\n')

	for i, row in enumerate(m2x):
	    output.write(str(atoms2[i]+'\t'+str(newmx[i])+'\t'+str(newmy[i])+'\t'+ str(newmz[i])+'\n'))
	output.write("$end\n")
	rem.seek(0)
	for s in rem:
	    output.write(s.replace('foo',str(num)))


	scriptout.write('qchem '+inp_string+'_'+str(num)+'.in '+inp_string+'_'+str(num)+'.out \n')
	output.close()

scriptout.close()
rem.close()
